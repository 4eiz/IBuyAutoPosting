from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters.callback_data import CallbackData
from aiogram import types
from data.users import user_profile
from data.subscribes import SelectTable
from config import CHANNEL_URL


class Menu_callback(CallbackData, prefix="menu"):
    menu: str


class Money_callback(CallbackData, prefix="money"):
    id: int
    name: str
    price: float
    prefix: str


class Buy_answer(CallbackData, prefix="answer"):
    buy: str


class ButtonTexts:
    BACK = "‚Ü©Ô∏è –ù–∞–∑–∞–¥"
    CANCEL = "‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞"
    SUBSCRIBE = "‚öúÔ∏è –ü–æ–¥–ø–∏—Å–∫–∞"
    REPLENISH = "üí∏ –ü–æ–ø–æ–ª–Ω–∏—Ç—å"
    PAY = "–û–ø–ª–∞—Ç–∏—Ç—å"


async def money():
    temp_list = []
    kb = []
    records = SelectTable()

    for record in records[:6]:
        temp_list.append(types.InlineKeyboardButton(
            text=f"{record[1]} - {float(record[2])}$", callback_data=Money_callback(id=record[0], name=record[1], price=float(record[2]), prefix='sub').pack()))
        if len(temp_list) == 2:
            kb.append(temp_list.copy())
            temp_list.clear()

    if temp_list:
        kb.append(temp_list)
    kb.append([
        types.InlineKeyboardButton(
            text=ButtonTexts.BACK, callback_data=Menu_callback(menu="private_menu").pack()),
    ])

    return types.InlineKeyboardMarkup(inline_keyboard=kb)


def anwser_for_buy():
    kb = [
        [
            types.InlineKeyboardButton(text=ButtonTexts.PAY, callback_data=Buy_answer(buy="yes").pack())
        ],
        [
            types.InlineKeyboardButton(text=ButtonTexts.CANCEL, callback_data=Buy_answer(buy="cancel").pack())
        ]
    ]
    return types.InlineKeyboardMarkup(inline_keyboard=kb)


def k_menu():
    kb = [
        [
            types.InlineKeyboardButton(
                text='üíº –†–∞–±–æ—á–∏–π –∫–∞–±–∏–Ω–µ—Ç', callback_data=Menu_callback(menu="work_menu").pack()),
            types.InlineKeyboardButton(
                text='üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', callback_data=Menu_callback(menu="private_menu").pack())
        ],
        [
            types.InlineKeyboardButton(
                text='üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç', callback_data=Menu_callback(menu="upl_acc").pack()),
        ]
    ]
    return types.InlineKeyboardMarkup(inline_keyboard=kb)


def k_menu2():
    kb = [
        [
            types.InlineKeyboardButton(text='üíº –†–∞–±–æ—á–∏–π –∫–∞–±–∏–Ω–µ—Ç', callback_data=Menu_callback(menu="work_menu").pack()),
            types.InlineKeyboardButton(text='üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç', callback_data=Menu_callback(menu="private_menu").pack())
        ],
        [
            types.InlineKeyboardButton(text='üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç', callback_data=Menu_callback(menu="upl_acc").pack()),
        ],
        [
            types.InlineKeyboardButton(text='‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å', callback_data=Menu_callback(menu="admin").pack()),
        ]
    ]
    return types.InlineKeyboardMarkup(inline_keyboard=kb)


def cancel_in():
    kb = [
        [
            types.InlineKeyboardButton(
                text=ButtonTexts.CANCEL, callback_data=Menu_callback(menu="cancel").pack())
        ]
    ]
    return types.InlineKeyboardMarkup(inline_keyboard=kb)


def cancel_rp():
    kb = [
        [
            KeyboardButton(text=ButtonTexts.BACK)
        ]
    ]
    return types.InlineKeyboardMarkup(inline_keyboard=kb)


async def k_work_menu(user_id):
    kb = [
        [
            types.InlineKeyboardButton(
                text='üñçÔ∏è –¢–µ–∫—Å—Ç', callback_data=Menu_callback(menu="text").pack()),
            types.InlineKeyboardButton(
                text='‚è∞ –ó–∞–¥–µ—Ä–∂–∫–∞', callback_data=Menu_callback(menu="delay").pack()),
        ],

        [
            types.InlineKeyboardButton(
                text=f'{(await user_profile(user_id))[8]} –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', callback_data=Menu_callback(menu="send_notifications").pack()),
            types.InlineKeyboardButton(
                text=f'{(await user_profile(user_id))[9]} –†–∞—Å—Å—ã–ª–∫–∞', callback_data=Menu_callback(menu="newsletter").pack()),
        ],

        [
            types.InlineKeyboardButton(
                text='üìú –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç', callback_data=Menu_callback(menu="show_text").pack()),
        ],

        [
            types.InlineKeyboardButton(text=ButtonTexts.BACK, callback_data=Menu_callback(menu="menu").pack())
        ]
    ]

    return types.InlineKeyboardMarkup(inline_keyboard=kb)


def k_private_menu():
    kb = [
        [
            types.InlineKeyboardButton(
                text=ButtonTexts.SUBSCRIBE, callback_data=Menu_callback(menu="subscribe").pack()),
            types.InlineKeyboardButton(
                text=ButtonTexts.REPLENISH, callback_data=Menu_callback(menu="replenish").pack()),
        ],

        [
            types.InlineKeyboardButton(
                text=ButtonTexts.BACK, callback_data=Menu_callback(menu="menu").pack()),
        ],
    ]

    return types.InlineKeyboardMarkup(inline_keyboard=kb)


def k_repl(url):
    kb = [
        [
            types.InlineKeyboardButton(text=ButtonTexts.PAY, url=url)
        ],
        [
            types.InlineKeyboardButton(
                text=ButtonTexts.CANCEL, callback_data=Buy_answer(buy="private_menu").pack())
        ]
    ]
    return types.InlineKeyboardMarkup(inline_keyboard=kb)


def cancel_rep():
    kb = [
        [
            types.InlineKeyboardButton(
                text=ButtonTexts.CANCEL, callback_data=Menu_callback(menu="private_menu").pack())
        ]
    ]
    return types.InlineKeyboardMarkup(inline_keyboard=kb)


def cancel_upl():
    kb = [
        [
            types.InlineKeyboardButton(
                text=ButtonTexts.CANCEL, callback_data=Menu_callback(menu="menu").pack())
        ]
    ]
    return types.InlineKeyboardMarkup(inline_keyboard=kb)


def admin_panel():
    kb = [
        [
            types.InlineKeyboardButton(text='üí∏ –ò–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data=Menu_callback(menu="change_balance").pack()),
            types.InlineKeyboardButton(text='üåê –ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Å–∫–∏', callback_data=Menu_callback(menu="change_proxy").pack()),
        ],
        [
            types.InlineKeyboardButton(text=ButtonTexts.BACK, callback_data=Menu_callback(menu="menu").pack())
        ]
    ]
    return types.InlineKeyboardMarkup(inline_keyboard=kb)


def update_account_method():
    kb = [
        [
            types.InlineKeyboardButton(text='üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Å—Å–∏—é', callback_data=Menu_callback(menu="upl_acc_method").pack()),
            types.InlineKeyboardButton(text='üì± –í–æ–π—Ç–∏ –Ω–æ–º–µ—Ä—É', callback_data=Menu_callback(menu="upl_acc_method_2").pack()),
        ],
        [
            types.InlineKeyboardButton(text=ButtonTexts.BACK, callback_data=Menu_callback(menu="menu").pack())
        ]
    ]
    return types.InlineKeyboardMarkup(inline_keyboard=kb)

def menu_subscribe():
    kb = [
        [
            types.InlineKeyboardButton(text='–ö–ê–ù–ê–õ', url=CHANNEL_URL),
        ],
    ]
    return types.InlineKeyboardMarkup(inline_keyboard=kb)